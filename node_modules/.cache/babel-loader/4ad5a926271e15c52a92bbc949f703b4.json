{"ast":null,"code":"import _slicedToArray from\"D:/rpi3/belpoets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Header from'../components/Header.js';import{Link}from'react-router-dom';import JSONDATA from'../MOCK_DATA.json';import{useState}from'react';import{useTranslation}from'react-i18next';import\"../../src/i18n\";import{Container}from'react-bootstrap';import{ListGroup}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function List(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"div\",{class:\"input-group rounded\",id:\"search\",children:/*#__PURE__*/_jsx(\"input\",{type:\"search\",class:\"form-control rounded\",placeholder:t(\"find.f\"),\"aria-label\":\"Search\",\"aria-describedby\":\"search-addon\",onChange:function onChange(event){setSearchTerm(event.target.value);}})}),/*#__PURE__*/_jsx(ListGroup,{children:JSONDATA.filter(function(val){if(searchTerm==\"\"){return val;}else if(val.first_name.toLowerCase().includes(searchTerm.toLowerCase())){return val;}}).map(function(val,key){return/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Link,{to:val.link,children:[val.first_name,\" \",val.last_name]})},key);})})]})]});}","map":{"version":3,"sources":["D:/rpi3/belpoets/src/pages/List.js"],"names":["React","Header","Link","JSONDATA","useState","useTranslation","Container","ListGroup","List","searchTerm","setSearchTerm","t","event","target","value","filter","val","first_name","toLowerCase","includes","map","key","link","last_name"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAO,gBAAP,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,SAAT,KAA0B,iBAA1B,C,wFAGA,cAAe,SAASC,CAAAA,IAAT,EAAgB,CAE3B,cAAoCJ,QAAQ,CAAC,EAAD,CAA5C,wCAAOK,UAAP,eAAmBC,aAAnB,eACA,oBAAcL,cAAc,EAA5B,CAAQM,CAAR,iBAAQA,CAAR,CACA,mBACI,oCACI,KAAC,MAAD,IADJ,cAEI,MAAC,SAAD,yBACI,YAAK,KAAK,CAAC,qBAAX,CAAiC,EAAE,CAAC,QAApC,uBACI,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,sBAA3B,CAAkD,WAAW,CAAEA,CAAC,CAAC,QAAD,CAAhE,CAA4E,aAAW,QAAvF,CACI,mBAAiB,cADrB,CAEI,QAAQ,CAAE,kBAAAC,KAAK,CAAI,CAAEF,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb,CAAmC,CAF5D,EADJ,EADJ,cAMI,KAAC,SAAD,WACKX,QAAQ,CAACY,MAAT,CAAgB,SAACC,GAAD,CAAS,CACtB,GAAIP,UAAU,EAAI,EAAlB,CAAsB,CAClB,MAAOO,CAAAA,GAAP,CACH,CAFD,IAEO,IAAIA,GAAG,CAACC,UAAJ,CAAeC,WAAf,GAA6BC,QAA7B,CAAsCV,UAAU,CAACS,WAAX,EAAtC,CAAJ,CAAqE,CACxE,MAAOF,CAAAA,GAAP,CACH,CACJ,CANA,EAMEI,GANF,CAMM,SAACJ,GAAD,CAAMK,GAAN,CAAc,CACjB,mBAAO,KAAC,SAAD,CAAW,IAAX,wBAA0B,MAAC,IAAD,EAAM,EAAE,CAAEL,GAAG,CAACM,IAAd,WAAqBN,GAAG,CAACC,UAAzB,KAAsCD,GAAG,CAACO,SAA1C,GAA1B,EAAqBF,GAArB,CAAP,CACH,CARA,CADL,EANJ,GAFJ,GADJ,CAuBH","sourcesContent":["import React from 'react';\nimport Header from '../components/Header.js'\nimport { Link } from 'react-router-dom'\nimport JSONDATA from '../MOCK_DATA.json'\nimport { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport \"../../src/i18n\"\nimport { Container } from 'react-bootstrap'\nimport { ListGroup } from 'react-bootstrap'\n\n\nexport default function List() {\n\n    const [searchTerm, setSearchTerm] = useState('')\n    const { t } = useTranslation();\n    return (\n        <div>\n            <Header />\n            <Container>\n                <div class=\"input-group rounded\" id=\"search\">\n                    <input type=\"search\" class=\"form-control rounded\" placeholder={t(\"find.f\")} aria-label=\"Search\"\n                        aria-describedby=\"search-addon\"\n                        onChange={event => { setSearchTerm(event.target.value) }} />\n                </div>\n                <ListGroup>\n                    {JSONDATA.filter((val) => {\n                        if (searchTerm == \"\") {\n                            return val\n                        } else if (val.first_name.toLowerCase().includes(searchTerm.toLowerCase())) {\n                            return val\n                        }\n                    }).map((val, key) => {\n                        return <ListGroup.Item key={key}><Link to={val.link}>{val.first_name} {val.last_name}</Link></ListGroup.Item>\n                    })}\n                </ListGroup>\n            </Container>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}